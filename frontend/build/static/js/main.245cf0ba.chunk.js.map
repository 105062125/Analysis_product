{"version":3,"sources":["component/Test.js","component/Timer.js","component/JSTimer.js","App.js","reportWebVitals.js","index.js"],"names":["Test","React","Component","Timer","useState","currentTime","setCurrentTime","useEffect","fetch","then","res","text","data","JSON","parse","time","JSTimer","state","date","Date","this","updateTimer","setInterval","setState","toLocaleTimeString","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOASeA,G,6KALT,OAAO,kD,GAFMC,IAAMC,Y,OCmBVC,MAlBf,WAAkB,IAAD,EACuBC,mBAAS,GADhC,mBACRC,EADQ,KACKC,EADL,KAUf,OAPAC,qBAAU,WACRC,MAAM,SAASC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAG,GAC1CA,EAAOC,KAAKC,MAAMF,GAClBN,EAAeM,EAAKG,WAErB,IAGC,8BACE,oDAAuBV,EAAvB,UCbaW,E,4MACnBC,MAAQ,CACNC,KAAM,IAAIC,M,kEAIVC,KAAKC,gB,oCAGQ,IAAD,OACZC,aAAY,WACV,EAAKC,SAAS,CACZL,KAAM,IAAIC,SAEX,O,+BAIH,OAAO,mEAAaC,KAAKH,MAAMC,KAAKM,4B,GAlBHtB,aCiBtBuB,E,uKAXX,OACE,mCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GANUxB,IAAMC,WCMTwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.245cf0ba.chunk.js","sourcesContent":["import React from 'react';\n\nclass Test extends React.Component {\n    render() {\n      return <h1>TestTestTest</h1>;\n    }\n}\n\n\nexport default Test;","import React, { useState, useEffect } from 'react';\n\n\nfunction Timer() {\n  const [currentTime, setCurrentTime] = useState(0);\n\n  useEffect(() => {\n    fetch('/time').then(res => res.text()).then(data => {\n      data = JSON.parse(data);\n      setCurrentTime(data.time);\n    })\n  }, []);\n\n  return (\n      <div>\n        <p>Timer: API time is {currentTime}.</p>\n      </div>\n  );\n}\n\n\nexport default Timer;","import React, { Component } from \"react\";\n\nexport default class JSTimer extends Component {\n  state = {\n    date: new Date()\n  };\n\n  componentDidMount() {\n    this.updateTimer();\n  }\n\n  updateTimer() {\n    setInterval(() => {\n      this.setState({\n        date: new Date()\n      });\n    }, 1000);\n  }\n\n  render() {\n    return <div>現在時間是: {this.state.date.toLocaleTimeString()}</div>;\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport Test from './component/Test'\nimport Timer from './component/Timer'\nimport JSTimer from './component/JSTimer'\n\nclass App extends React.Component {\n  render(){\n    return(\n      <header>\n        <Test/>\n        <Timer/>\n        <JSTimer/>\n      </header>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}